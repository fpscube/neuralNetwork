load '../lib/neural.rb' 


def runGame(neural,sizeX,sizeY,posX,posY,display)
	@Grid = []
	(sizeY+2).times do |y| 
		@Grid[y] ||= []
		(sizeX+2).times do |x|
			if (x==0 || x==(sizeX+1) || y==0 || y==(sizeY+1))
				@Grid[y][x] = 1
			else
				@Grid[y][x] = 0
			end
		end
	end

	posX+=1
	posY+=1
	out=[0,0,0,0]
	count=0
	while(1)
		inTab=[]
		inTab.push(@Grid[posY  ][posX+1])
		inTab.push(@Grid[posY+1][posX  ])
		inTab.push(@Grid[posY  ][posX-1])
		inTab.push(@Grid[posY-1][posX  ])
		neural.run(inTab,out)
		outIndex=out.index(out.max)
		posY -=1 if (outIndex==0) #north
		posX +=1 if (outIndex==1) #east
		posY +=1 if (outIndex==2) #south
		posX -=1 if (outIndex==3) #west 

		if (@Grid[posY][posX] == 0)
			@Grid[posY][posX] = 1
			count+=1
		else
			if (display)
				@Grid.each { |i| puts i.to_s}
				puts
			end
			return (1.0 - count.to_f/(sizeX*sizeY))
		end
	end

end
genom = [0.49570637416353236, -0.7075326885567561, -0.8341889789265431, -0.7342832729935787, 0.6392848971609602, 0.32534429787877883, -0.4990523074297839, 0.055108569466857826, -0.19503065117704277, 0.09876738597963097, -0.6754896225105389, -0.8672806932037036, -0.4355300253203913, -0.7440247677495933, -0.11442490884886047, -0.7411978069702989, -0.5745475576852992, -0.5437528096474622, 0.9519578962342163, 0.7384060620699961, 0.8761292196633874, -0.43054211227261585, 0.3380318803467526, -0.4380263214643425, -0.34080386892874603, 0.6822849157024555, -0.31298720595097773, 0.24615132761253378, 0.2885664825732359, -0.16399002860931322, -0.7055630111398945, 0.9880906999826868, -0.7215049312946233, 0.5069998733338346, 0.6591525465202834, 0.16533618866690492, 0.6313444761307743, 0.7708818530025481, 0.11366071799808153, -0.0747376577972283, 0.27974326591694454, 0.5724184556391785, 0.5599564088569218, -0.8190223167264703, 0.2446008115778744, 0.905853284011291, 0.39560086586997145, -0.00598930525846697, 0.5457651077062908, 0.8546715222417856, 0.4962646664688919, 0.9458811328453758, 0.41960288346782737, 0.3074740875320967, 0.7890290400525175, -0.34591619333363854, 0.6673158027996828, 0.5255824687616364, -0.49582452585597303, -0.5528869347536518, -0.3240112556954844, -0.8780568986664494, -0.9996282486301775, 0.6637748615419541, -0.22250281471740552, 0.6673105795497369, -0.026432596695070254, -0.0540227463436187, 0.28375500979381685, -0.117093115876018, 0.549425244791689, 0.5568154704266326, -0.7241201548576348, 0.17546359040695014, -0.6949294281747704, 0.3155991279984549, -0.6339528542246289, -0.32055350154983664, -0.0690605020595314, 0.36083452746927214, -0.269133156235839, -0.0016500138599886416, -0.8761531743304685, 0.6141902318514223, 0.6641591840410745, 0.10698165638858015, -0.3259519526963097, 0.9322521181365262, 0.6318609231273138, -0.6800466112411634, 0.3375224609486922, -0.9666640461617797, -0.5799432808668812, -0.13194351648741764, -0.4089120702061311, 0.32366591127110134, 0.2019847623183162, 0.9362515556551612, 0.22066332256437637, -0.8001334196044947, -0.22569078468694137, 0.13488958298960485, -0.9578291299018131, 0.4394246971263789, -0.9465670035677789, -0.3963883625288027, -0.4751260254083949, -0.30280772975354564, -0.5337424123557872, -0.21280594334379588, 0.5158721000935145, -0.7160169864431887, 0.4717045700055347, -0.4126242056589704, -0.40400115349428645, -0.4336414221649403, -0.8930651909658014, -0.4333117070700654, -0.07941006502412251, -0.027439928273514713, -0.67395927906693, 0.0074998129957324355, 0.6771644617134271, 0.6993574648539018, -0.8896783075650851, 0.1361334423426983, 0.456624640815009, -0.7678361866994245]

neural = Neural.new(4,4,8,genom,false)
score=0	
score+=runGame(neural,20,20,15,15,true)
score+=runGame(neural,30,20,7,2,true)
score+=runGame(neural,30,20,29,0,true)
score+=runGame(neural,20,30,19,29,true)
score+=runGame(neural,20,30,9,15,true)
score+=runGame(neural,20,20,10,6,true)
score+=runGame(neural,30,20,5,10,true)
score+=runGame(neural,30,20,29,7,true)
score+=runGame(neural,20,30,19,2,true)
score+=runGame(neural,20,30,10,15,true)
score+=runGame(neural,20,30,4,22,true)
score+=runGame(neural,20,30,8,2,true)
score+=runGame(neural,20,30,15,15,true)
score+=runGame(neural,20,1,0,0,true)
score+=runGame(neural,2,20,0,0,true)
puts score	/15





